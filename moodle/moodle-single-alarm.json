{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Moodle Single Server",

  "Parameters" : {
    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },
    "InstanceType" : {
      "Description" : "WebServer EC2 instance type",
      "Type" : "String",
      "Default" : "t2.medium",
      "AllowedValues" : [ "t2.micro", "t2.small", "t2.medium", "t2.large", "t2.xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },
    "HostName" : {
      "Description" : "Host Name, leave <default> to have one generated",
      "Type" : "String",
      "Default" : "<default>",
      "AllowedPattern" : "(<default>|[a-z][a-z0-9\\-\\.]*)",
      "MinLength": "0",
      "MaxLength": "64",
      "ConstraintDescription" : "must be a valid host name, eg: moodle.example.com, or leave '<default>' to use EC2 hostname"
    },
    "HostedZoneName": {
      "Description": "Required to register HostName automatically, otherwise must configure DNS in your current provider",
      "Type": "AWS::Route53::HostedZone::Id"
    },
    "CorporateCidrIp": {
      "Description": "The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "DBName" : {
      "Default": "moodledb",
      "Description" : "The Moodle database name",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
    },
    "DBUser" : {
      "Default": "moodle",
      "Description" : "The Moodle database admin account username",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
    },
    "DBRootPassword" : {
      "NoEcho": "true",
      "Description" : "MySQL root password",
      "Type": "String",
      "MinLength": "8",
      "MaxLength": "41",
      "AllowedPattern" : "[a-zA-Z0-9]*",
      "ConstraintDescription" : "must contain only alphanumeric characters."
    },
    "MoodleVersion" : {
      "Description" : "Moodle version number or latest development",
      "Type" : "String",
      "Default" : "3.2.1",
      "AllowedValues" : [ "3.0.8", "3.1.4", "3.2.1", "development"]
    },
    "MoodleAdminPassword" : {
      "NoEcho": "true",
      "Description" : "Moodle Admin Password",
      "Type": "String",
      "MinLength": "8",
      "MaxLength": "41",
      "AllowedPattern" : "[a-zA-Z0-9]*",
      "ConstraintDescription" : "must contain only alphanumeric characters."
    },
    "MoodleAdminEmail" : {
      "Description" : "Moodle Admin Email",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "200",
      "AllowedPattern" : "[a-zA-Z0-9@\\.]*",
      "ConstraintDescription" : "must contain only alphanumeric characters."
    },
    "MoodleSiteFullName" : {
      "Description" : "Moodle Site Full Name",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "200",
      "AllowedPattern" : "[a-zA-Z0-9 \\-]*",
      "ConstraintDescription" : "must contain only alphanumeric characters."
    },
    "MoodleSiteShortName" : {
      "Description" : "Moodle Site Short Name",
      "Type": "String",
      "MinLength": "3",
      "MaxLength": "20",
      "AllowedPattern" : "[a-zA-Z0-9 \\-]*",
      "ConstraintDescription" : "must contain only alphanumeric characters."
    }
  },

  "Metadata" : {
    "AWS::CloudFormation::Interface" : {
      "ParameterGroups" : [
        {
          "Label" : { "default" : "Moodle Configuration" },
          "Parameters" : [ "MoodleSiteFullName", "MoodleSiteShortName", "MoodleAdminEmail", "MoodleAdminPassword", "MoodleVersion" ]
        },
        {
          "Label" : { "default" : "Network Configuration" },
          "Parameters" : [ "HostedZoneName", "HostName", "CorporateCidrIp"]
        },
        {
          "Label" : { "default" : "Web Server Configuration" },
          "Parameters" : [ "InstanceType", "KeyName" ]
        },
        {
          "Label" : { "default":"Database Configuration" },
          "Parameters" : [ "DBName", "DBUser", "DBRootPassword" ]
        }
      ],
      "ParameterLabels" : {
        "MoodleVersion": { "default" : "Moodle Version" },
        "MoodleAdminEmail": { "default" : "Admin Email" },
        "MoodleAdminPassword": { "default" : "Admin Password" },
        "MoodleSiteFullName": { "default" : "Site Full Name" },
        "MoodleSiteShortName": { "default" : "Site Short Name" },
        "HostName": { "default" : "Host Name" },
        "HostedZoneName": { "default" : "Hosted Zone Name" },
        "CorporateCidrIp": { "default" : "Admin IP Address" },

        "InstanceType": { "default" : "Instance Type" },
        "KeyName": { "default" : "SSH Key Name" },

        "DBInstanceClass": { "default" : "Maximum Nodes" },
        "DBName": { "default" : "Name" },
        "DBUser": { "default" : "User" },
        "DBRootPassword": { "default" : "Password" }
      }
    }
  },

  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t2.micro"    : { "Arch" : "HVM64"  },
      "t2.small"    : { "Arch" : "HVM64"  },
      "t2.medium"   : { "Arch" : "HVM64"  },
      "t2.large"    : { "Arch" : "HVM64"  },
      "t2.xlarge"   : { "Arch" : "HVM64"  }
    },

    "AWSInstanceType2NATArch" : {
      "t2.micro"    : { "Arch" : "NATHVM64"  },
      "t2.small"    : { "Arch" : "NATHVM64"  },
      "t2.medium"   : { "Arch" : "NATHVM64"  },
      "t2.large"    : { "Arch" : "NATHVM64"  },
      "t2.xlarge"   : { "Arch" : "NATHVM64"  }
    },

    "AWSRegionArch2AMI" : {
      "us-east-1"        : {"PV64" : "ami-8ff710e2", "HVM64" : "ami-0b33d91d", "HVMG2" : "ami-4afd1d27"},
      "us-east-2"        : {"HVM64" : "ami-c55673a0"},
      "us-west-2"        : {"PV64" : "ami-eff1028f", "HVM64" : "ami-f303fb93", "HVMG2" : "ami-ee897b8e"},
      "us-west-1"        : {"PV64" : "ami-ac85fbcc", "HVM64" : "ami-11790371", "HVMG2" : "ami-69106909"},
      "eu-west-1"        : {"PV64" : "ami-23ab2250", "HVM64" : "ami-c39604b0", "HVMG2" : "ami-936de5e0"},
      "eu-central-1"     : {"PV64" : "ami-27c12348", "HVM64" : "ami-7df01e12", "HVMG2" : "ami-8e7092e1"},
      "ap-northeast-1"   : {"PV64" : "ami-26160d48", "HVM64" : "ami-6154bb00", "HVMG2" : "ami-91809aff"},
      "ap-northeast-2"   : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-69e92207", "HVMG2" : "NOT_SUPPORTED"},
      "ap-southeast-1"   : {"PV64" : "ami-f3dd0a90", "HVM64" : "ami-a2c111c1", "HVMG2" : "ami-3c30e75f"},
      "ap-southeast-2"   : {"PV64" : "ami-8f94b9ec", "HVM64" : "ami-d9d7f9ba", "HVMG2" : "ami-543d1137"},
      "sa-east-1"        : {"PV64" : "ami-e188018d", "HVM64" : "ami-106ee57c", "HVMG2" : "NOT_SUPPORTED"},
      "cn-north-1"       : {"PV64" : "ami-77a46e1a", "HVM64" : "ami-05a66c68", "HVMG2" : "NOT_SUPPORTED"}
    },

    "MoodleDownload": {
      "3.0.8":         { "URL": "https://download.moodle.org/download.php/direct/stable30/moodle-3.0.8.tgz" },
      "3.1.4":       { "URL": "https://download.moodle.org/download.php/direct/stable31/moodle-3.1.4.tgz" },
      "3.2.1":       { "URL": "https://download.moodle.org/download.php/direct/stable32/moodle-3.2.1.tgz" },
      "development": { "URL": "https://download.moodle.org/download.php/direct/moodle/moodle-latest.zip" }
    }
  },

  "Conditions" : {
    "UseHostName"     : { "Fn::Not": [ { "Fn::Equals": ["<default>", { "Ref": "HostName"}] } ] },
    "HasHostedZoneName": {"Fn::Not": [ { "Fn::Equals": ["", { "Ref": "HostedZoneName"}] } ] },
    "DNSRegistration" : { "Fn::And": [ { "Condition": "UseHostName"}, { "Condition": "HasHostedZoneName"} ] }
  },

  "Resources" : {
    "WebServerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable HTTP access via port 80 locked down to the load balancer + SSH access",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "CorporateCidrIp"}}
        ]
      }
    },
    "WebServer": {
      "Type" : "AWS::EC2::Instance",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "configSets" : {
            "moodle_install" : ["install_cfn", "install_moodle", "configure_moodle"]
          },
          "install_cfn" : {
            "files": {
              "/etc/cfn/cfn-hup.conf": {
                "content": { "Fn::Join": [ "", [
                  "[main]\n",
                  "stack=", { "Ref": "AWS::StackId" }, "\n",
                  "region=", { "Ref": "AWS::Region" }, "\n"
                ]]},
                "mode"  : "000400",
                "owner" : "root",
                "group" : "root"
              },
              "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                "content": { "Fn::Join": [ "", [
                  "[cfn-auto-reloader-hook]\n",
                  "triggers=post.update\n",
                  "path=Resources.WebServer.Metadata.AWS::CloudFormation::Init\n",
                  "action=/opt/aws/bin/cfn-init -v ",
                  "         --stack ", { "Ref" : "AWS::StackName" },
                  "         --resource WebServer ",
                  "         --configsets moodle_install ",
                  "         --region ", { "Ref" : "AWS::Region" }, "\n"
                ]]},
                "mode"  : "000400",
                "owner" : "root",
                "group" : "root"
              }
            },
            "services" : {
              "sysvinit" : {
                "cfn-hup" : { "enabled" : "true", "ensureRunning" : "true",
                  "files" : ["/etc/cfn/cfn-hup.conf", "/etc/cfn/hooks.d/cfn-auto-reloader.conf"] }
              }
            }
          },

          "install_moodle" : {
            "packages" : {
              "yum" : {
                "nginx"                 : [],
                "php56"                 : [],
                "php56-fpm"             : [],
                "php56-cli"             : [],
                "php56-gd"              : [],
                "php56-intl"            : [],
                "php56-mbstring"        : [],
                "php56-opcache"         : [],
                "php56-soap"            : [],
                "php56-xml"             : [],
                "php56-xmlrpc"          : [],
                "php56-process"         : [],
                "php56-jsonc"           : [],
                "php56-pecl-memcached"  : [],
                "php56-mysqlnd"         : [],
                "mysql"                 : [],
                "mysql-server"          : [],
                "mysql-libs"            : [],
                "memcached"             : []
              }
            },
            "sources" : {
              "/var/www" : { "Fn::FindInMap" : [ "MoodleDownload", { "Ref" : "MoodleVersion" }, "URL" ] }
            },
            "files" : {
              "/tmp/setup.mysql" : {
                "content" : { "Fn::Join" : ["", [
                  "CREATE DATABASE ", { "Ref" : "DBName" }, ";\n",
                  "CREATE USER '", { "Ref" : "DBUser" }, "'@'localhost' IDENTIFIED BY '", { "Ref" : "DBRootPassword" }, "';\n",
                  "GRANT ALL ON ", { "Ref" : "DBName" }, ".* TO '", { "Ref" : "DBUser" }, "'@'localhost';\n",
                  "FLUSH PRIVILEGES;\n"
                ]]},
                "mode"  : "000400",
                "owner" : "root",
                "group" : "root"
              },
              "/etc/nginx/nginx.conf" : {
                "content" : { "Fn::Join" : [ "", [
                  "user nginx;\n",
                  "worker_processes auto;\n",
                  "error_log /var/log/nginx/error.log;\n",
                  "pid /var/run/nginx.pid;\n\n",
                  "events {\n",
                  "    worker_connections 1024;\n",
                  "}\n\n",
                  "http {\n",
                  "    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n",
                  "                      '$status $body_bytes_sent \"$http_referer\" '\n",
                  "                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n",
                  "    access_log  /var/log/nginx/access.log  main;\n\n",
                  "    sendfile            on;\n",
                  "    tcp_nopush          on;\n",
                  "    tcp_nodelay         on;\n",
                  "    keepalive_timeout   65;\n",
                  "    types_hash_max_size 2048;\n",
                  "    include             /etc/nginx/mime.types;\n",
                  "    default_type        application/octet-stream;\n",
                  "    include /etc/nginx/conf.d/*.conf;\n\n",
                  "    index   index.php;\n\n",
                  "    server {\n",
                  "        listen       80 default_server;\n",
                  "        listen       [::]:80 default_server;\n",
                  "        server_name  localhost;\n",
                  "        root         /var/www/html;\n\n",
                  "        location / {\n",
                  "        }\n\n",
                  "        location ~ [^/]\\.php(/|$) {\n",
                  "                fastcgi_split_path_info  ^(.+\\.php)(/.+)$;\n",
                  "                fastcgi_index            index.php;\n",
                  "                fastcgi_pass             127.0.0.1:9000;\n",
                  "                include                  fastcgi_params;\n",
                  "                fastcgi_param   PATH_INFO       $fastcgi_path_info;\n",
                  "                fastcgi_param   SCRIPT_FILENAME $document_root$fastcgi_script_name;\n",
                  "        }\n\n",
                  "        location /dataroot/ {\n",
                  "                internal;\n",
                  "                alias /var/www/data/;\n",
                  "        }\n",
                  "    }\n",
                  "}\n"
                ]]},
                "mode" : "000644",
                "owner" : "root",
                "group" : "root"
              },
              "/tmp/config.php" : {
                "content" : { "Fn::Join" : [ "", [
                  "<?php\n",
                  "unset($CFG);\n",
                  "global $CFG;\n",
                  "$CFG = new stdClass();\n",
                  "\n$CFG->dbtype    = 'mysqli';\n",
                  "$CFG->dblibrary = 'native';\n",
                  "$CFG->dbhost    = 'localhost';\n",
                  "$CFG->dbname    = '",{ "Ref" : "DBName" }, "';\n",
                  "$CFG->dbuser    = '",{ "Ref" : "DBUser" }, "';\n",
                  "$CFG->dbpass    = '",{ "Ref" : "DBRootPassword" }, "';\n",
                  "$CFG->prefix    = '';\n",
                  "$CFG->dboptions = array('dbpersist' => false,'dbsocket' => false,'dbport' => '','dbhandlesoptions' => false);\n",
                  "$CFG->wwwroot   = 'http://WWW_ROOT';\n",
                  "$CFG->dataroot  = '/var/www/data';\n",
                  "$CFG->localcachedir = '/var/www/local';\n",
                  "$CFG->directorypermissions = 02777;\n",
                  "$CFG->admin = 'admin';\n\n",
                  "$CFG->xsendfile = 'X-Accel-Redirect';\n",
                  "$CFG->xsendfilealiases = array('/dataroot/' => $CFG->dataroot);\n\n",
                  "$CFG->session_handler_class = '\\core\\session\\memcached';\n",
                  "$CFG->session_memcached_save_path = '127.0.0.1:11211';\n",
                  "$CFG->session_memcached_prefix = 'memc.sess.key.';\n",
                  "$CFG->session_memcached_acquire_lock_timeout = 120;\n",
                  "$CFG->session_memcached_lock_expire = 7200;\n",
                  "$CFG->cachestore_memcached = '127.0.0.1:11211';\n\n",
                  "require_once(__DIR__ . '/lib/setup.php');\n"
                ]]},
                "mode" : "000500",
                "owner" : "root",
                "group" : "root"
              },
              "/etc/cron.d/moodle" : {
                "content" : { "Fn::Join" : [ "", [
                  "* * * * * * apache /usr/bin/php /var/www/html/admin/cli/cron.php"
                ] ] },
                "owner": "root",
                "group": "root"
              }
            },
            "services" : {
              "sysvinit": {
                "nginx"     : { "enabled" : "true", "ensureRunning" : "true" },
                "php-fpm"   : { "enabled" : "true", "ensureRunning" : "true" },
                "mysqld"    : { "enabled" : "true", "ensureRunning" : "true" },
                "crond"     : { "enabled" : "true", "ensureRunning" : "true" },
                "memcached" : { "enabled" : "true", "ensureRunning" : "true" }
              }
            },
            "commands" : {
              "01_configure_moodle" : {
                "command" : { "Fn::Join" : [ ";", [
                    "mv -fT /var/www/moodle /var/www/html",
                    {"Fn::If" : [
                      "UseHostName",
                      { "Fn::Join" : [ "", [ "sed -i \"s/WWW_ROOT/", { "Ref": "HostName"}, "/g\" /tmp/config.php" ]]},
                      "sed -i \"s/WWW_ROOT/`curl -s http://169.254.169.254/latest/meta-data/public-hostname`/g\" /tmp/config.php"
                    ]},
                    "mv /tmp/config.php /var/www/html",
                    "chown -R root /var/www/html",
                    "chmod -R 0755 /var/www/html"
                ]]}
              },
              "02_create_data_dir" : {
                "command": { "Fn::Join" : [ ";", [
                    "mkdir /var/www/data",
                    "chmod 0777 /var/www/data"
                ]]}
              },
              "03_create_local_dir" : {
                "command": { "Fn::Join" : [ ";", [
                  "mkdir /var/www/local",
                  "chmod 0777 /var/www/local"
                ]]}
              }
            }
          },
          "configure_moodle" : {
            "commands" : {
              "01_set_mysql_root_password" : {
                "command" : { "Fn::Join" : ["", ["mysqladmin -u root password '", { "Ref" : "DBRootPassword" }, "'"]]},
                "test" : { "Fn::Join" : ["", ["$(mysql ", { "Ref" : "DBName" }, " -u root --password='", { "Ref" : "DBRootPassword" }, "' >/dev/null 2>&1 </dev/null); (( $? != 0 ))"]]}
              },
              "02_create_database" : {
                "command" : { "Fn::Join" : ["", ["mysql -u root --password='", { "Ref" : "DBRootPassword" }, "' < /tmp/setup.mysql"]]},
                "test" : { "Fn::Join" : ["", ["$(mysql ", { "Ref" : "DBName" }, " -u root --password='", { "Ref" : "DBRootPassword" }, "' >/dev/null 2>&1 </dev/null); (( $? != 0 ))"]]}
              },
              "03_install_database": {
                "cwd": "/var/www/html/admin/cli",
                "command": { "Fn::Join" : ["", [
                  "if [ -f /var/www/data/.dbinstalled ]; ",
                  "then echo \"skipping database creation\"; ",
                  "else touch /var/www/data/.dbinstalled; ",
                  "php install_database.php",
                  " --lang=pt_BR",
                  " --adminpass=\"",{ "Ref" : "MoodleAdminPassword" },"\"",
                  " --adminemail=",{ "Ref" : "MoodleAdminEmail" },
                  " --fullname=\"", { "Ref" : "MoodleSiteFullName" },"\"",
                  " --shortname=\"",{ "Ref" : "MoodleSiteShortName" },"\"",
                  " --agree-license;",
                  " fi"
                ]]}
              }
            }
          }
        }
      },
      "Properties": {
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
        "InstanceType"   : { "Ref" : "InstanceType" },
        "SecurityGroups" : [ {"Ref" : "WebServerSecurityGroup"} ],
        "KeyName"        : { "Ref" : "KeyName" },
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash -xe\n",
          "yum update -y aws-cfn-bootstrap\n",

          "/opt/aws/bin/cfn-init -v ",
          "         --stack ", { "Ref" : "AWS::StackName" },
          "         --resource WebServer ",
          "         --configsets moodle_install ",
          "         --region ", { "Ref" : "AWS::Region" }, "\n",

          "/opt/aws/bin/cfn-signal -e $? ",
          "         --stack ", { "Ref" : "AWS::StackName" },
          "         --resource WebServer ",
          "         --region ", { "Ref" : "AWS::Region" }, "\n"
        ]]}},
        "Tags": [
          { "Key": "Name","Value": { "Fn::Join" : [ "-", [ { "Ref" : "AWS::StackName" }, "WebServer" ] ] } }
        ]
      },
      "CreationPolicy" : {
        "ResourceSignal" : {
          "Timeout" : "PT15M"
        }
      }
    },

    "DNSRecord" : {
      "Type" : "AWS::Route53::RecordSet",
      "Condition" : "DNSRegistration",
      "Properties" : {
        "HostedZoneId" : { "Fn::If" : [ "DNSRegistration", { "Ref": "HostedZoneName" }, { "Ref" : "AWS::NoValue"} ] },
        "Comment" : "Moodle DNS",
        "Name" : { "Ref" : "HostName"},
        "Type" : "A",
        "TTL" : "300",
        "ResourceRecords" : [
          { "Fn::GetAtt" : [ "WebServer", "PublicIp" ] }
        ]
      }
    },

    "NotificationTopic" : {
      "Type" : "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": { "Fn::Join" : [ "-", [ { "Ref" : "AWS::StackName" }, "Notification" ] ] }
      }
    },

    "MySubscription" : {
      "Type" : "AWS::SNS::Subscription",
      "Properties" : {
        "Endpoint" : { "Ref" : "MoodleAdminEmail" },
        "Protocol" : "email",
        "TopicArn" : {"Ref" : "NotificationTopic"}
      }
    },

    "WebHighServerAlarm" : {
      "Type" : "AWS::CloudWatch::Alarm",
      "Properties" : {
        "AlarmDescription" : { "Fn::Join" : [ "-", [ { "Ref" : "AWS::StackName" }, "WebServer High CPU Alarm" ] ] },
        "AlarmActions" : [ { "Ref" : "NotificationTopic" } ],
        "MetricName" : "CPUUtilization",
        "Namespace" : "AWS/EC2",
        "Statistic" : "Average",
        "Period" : "60",
        "EvaluationPeriods" : "3",
        "Threshold" : "70",
        "ComparisonOperator" : "GreaterThanThreshold",
        "Dimensions" : [ {
          "Name" : "InstanceId",
          "Value" : {"Ref" : "WebServer"}
        } ]
      }
    }
  },

  "Outputs" : {
    "WebsiteURL" : {
      "Value" : { "Fn::Join" : ["", [
        "http://", {"Fn::If" : [ "UseHostName", { "Ref": "HostName"}, { "Fn::GetAtt" : [ "WebServer", "PublicDnsName" ]} ]}, "/" ]]},
      "Description" : "Moodle Website"
    }
  }
}
